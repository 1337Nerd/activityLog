define([],function(){"use strict";function performSync(connectionManager,apiClient,options){var serverId=apiClient.serverId();console.log("ServerSync.performSync to server: "+serverId),options=options||{};var uploadPhotos=options.uploadPhotos!==!1;options.cameraUploadServers&&options.cameraUploadServers.indexOf(serverId)===-1&&(uploadPhotos=!1);var pr=Promise.resolve();return pr.then(function(){return uploadPhotos?uploadContent(connectionManager,apiClient,options):Promise.resolve()}).then(function(){return syncMedia(connectionManager,apiClient,options)})}function uploadContent(connectionManager,apiClient,options){return new Promise(function(resolve,reject){require(["contentuploader"],function(ContentUploader){var uploader=new ContentUploader;uploader.uploadImages(connectionManager,apiClient).then(resolve,reject)})})}function syncMedia(connectionManager,apiClient,options){return new Promise(function(resolve,reject){require(["mediasync"],function(MediaSync){(new MediaSync).sync(apiClient,options).then(resolve,reject)})})}function ServerSync(){}return ServerSync.prototype.sync=function(connectionManager,apiClient,options){var serverId=apiClient.serverId();return apiClient.accessToken()?performSync(connectionManager,apiClient,options):(console.log("Skipping sync to server "+serverId+" because there is no saved authentication information."),Promise.resolve())},ServerSync});